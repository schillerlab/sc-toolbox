[tool.poetry]
name = "sc-toolbox"
version = "0.11.1"  # <<COOKIETEMPLE_FORCE_BUMP>>
description = "A collection of project templates and useful code snippets for single-cell data analysis with Scanpy."
authors = ["Lukas Heumos <lukas.heumos@posteo.net>"]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/schillerlab/sc-toolbox"
repository = "https://github.com/schillerlab/sc-toolbox"
documentation = "https://sc-toolbox.readthedocs.io"
classifiers = [
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]


[tool.poetry.dependencies]
python = ">=3.7.1,<3.10"
click = ">=7.0.0"
rich = ">=10.1.0"
PyYAML = ">=5.4.1"
Jinja2 = ">=2.11.3"
questionary = ">=1.9.0"
cookiecutter = ">=1.7.2"
requests = ">=2.25.1"
matplotlib = ">=3.4.1"
scanpy = ">=1.7.2"
seaborn = ">=0.11.1"
pandas = ">=1.2.4"
scipy = ">=1.6.3"
scikit-learn = ">=0.24.1"
typing-extensions = ">=3.10.0"
adjustText = ">=0.7.3"

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
coverage = {extras = ["toml"], version = "^6.0"}
safety = "^1.9.0"
mypy = "^0.910"
typeguard = "^2.12.1"
xdoctest = {extras = ["colors"], version = "^0.15.5"}
sphinx = ">=3.5.4"
sphinx-autobuild = ">=2021.3.14"
pre-commit = "^2.13.0"
flake8 = ">=3.9.2"
black = "^21.10b0"
flake8-bandit = ">=2.1.2"
flake8-bugbear = ">=21.4.3"
flake8-docstrings = ">=1.5.0"
flake8-rst-docstrings = ">=0.2.3"
pep8-naming = ">=0.11.1"
pre-commit-hooks = "^4.0.1"
sphinx-rtd-theme = ">=0.5.0"
sphinx-rtd-dark-mode = "^1.2.3"
sphinx-click = ">=2.5.0"
Pygments = ">=2.9.0"
types-pkg-resources = "^0.1.3"
types-requests = "^2.25.6"
types-attrs = "^19.1.0"

[tool.poetry.scripts]
sc-toolbox = "sc_toolbox.__main__:main"

[tool.black]
line-length = 120

[tool.mypy]
strict = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[tool.coverage.paths]
source = ["sc_toolbox", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["sc_toolbox"]

[tool.coverage.report]
show_missing = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
